<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | KamAcoma]]></title>
  <link href="http://colca.github.com/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://colca.github.com/"/>
  <updated>2014-03-24T15:31:57-07:00</updated>
  <id>http://colca.github.com/</id>
  <author>
    <name><![CDATA[colca]]></name>
    <email><![CDATA[colca7@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[rails: upload picture to s3 with paperclip]]></title>
    <link href="http://colca.github.com/blog/2014/03/24/rails-upload-picture-to-s3-with-paperclip/"/>
    <updated>2014-03-24T14:30:00-07:00</updated>
    <id>http://colca.github.com/blog/2014/03/24/rails-upload-picture-to-s3-with-paperclip</id>
    <content type="html"><![CDATA[<p>*. Create a new s3 bucket, add CORS policy:<br>
```
&lt;?xml version=&ldquo;1.0&rdquo; encoding=&ldquo;UTF-8&rdquo;?>
<CORSConfiguration xmlns="http://s3.amazonaws.com/doc/2006-03-01/"></p>

<pre><code>&lt;CORSRule&gt;
    &lt;AllowedOrigin&gt;*&lt;/AllowedOrigin&gt;
    &lt;AllowedMethod&gt;GET&lt;/AllowedMethod&gt;
    &lt;AllowedMethod&gt;POST&lt;/AllowedMethod&gt;
    &lt;AllowedMethod&gt;PUT&lt;/AllowedMethod&gt;
    &lt;MaxAgeSeconds&gt;3000&lt;/MaxAgeSeconds&gt;
    &lt;AllowedHeader&gt;*&lt;/AllowedHeader&gt;
&lt;/CORSRule&gt;
</code></pre>

<p></CORSConfiguration>
<code>
Make the s3 bucket as public &lt;br&gt;
</code>
{</p>

<pre><code>"Version": "2008-10-17",
"Statement": [
    {
        "Sid": "AllowPublicRead",
        "Effect": "Allow",
        "Principal": {
            "AWS": "*"
        },
        "Action": "s3:GetObject",
        "Resource": "arn:aws:s3:::bucketname/*"
    }
]
</code></pre>

<p>}
```</p>

<p>*. Edit Gemfile to add following gems<br>
```</p>

<h1>Gemfile</h1>

<p>gem &lsquo;paperclip&rsquo;, &lsquo;~>3.5.0&rsquo;</p>

<h1>3.5.0 version paperclip works with Rails 4</h1>

<p>gem &lsquo;aws-sdk&rsquo;
gem &lsquo;s3_direct_upload&rsquo;
```</p>

<p>*. Specify AWS configuration variables for production environment<br>
```</p>

<h1>config/environments/production.rb</h1>

<p>config.paperclip_defaults = {
  :storage => :s3,
  :s3_credentials => {</p>

<pre><code>:bucket =&gt; ENV['S3_BUCKET_NAME'],
:access_key_id =&gt; ENV['AWS_ACCESS_KEY_ID'],
:secret_access_key =&gt; ENV['AWS_SECRET_ACCESS_KEY']
</code></pre>

<p>  }
}
```</p>

<p>*. Set AWS configuration variables on heroku app<br>
<code>
$ heroku config:set S3_BUCKET_NAME=your_bucket_name
$ heroku config:set AWS_ACCESS_KEY_ID=your_access_key_id
$ heroku config:set AWS_SECRET_ACCESS_KEY=your_secret_access_key
</code>
(your aws credentials reside in account->security credentials)<br>
check heroku configuration<br>
<code>
$ heroku config
</code></p>

<p>*. Rails update database</p>

<p><code>
$ rails g migration AddPicPaperClip
</code>
Edit migration as below, we are adding four columns to the existing movies table<br>
```
class AddPicPaperclip &lt; ActiveRecord::Migration
  def self.up</p>

<pre><code>add_column :movies, :pic_file_name, :string
add_column :movies, :pic_content_type, :string
add_column :movies, :pic_file_size,    :integer
add_column :movies, :pic_updated_at,   :datetime
</code></pre>

<p>  end
  def self.down</p>

<pre><code>remove_column :movies, :pic_file_name
remove_column :movies, :pic_content_type
remove_column :movies, :pic_file_size
remove_column :movies, :pic_updated_at
</code></pre>

<p>  end
end</p>

<p><code>
Run the migration to update the db&lt;br&gt;
</code>
$ rake db:migrate
```</p>

<p>*. Models
```</p>

<h1>app/model/movies.rb</h1>

<p>class Movie &lt; ActiveRecord::Base
  validates :title, :presence => true, :uniqueness => true, :length => {minimum: 3, too_short: &ldquo;must have at least %{count} chars&rdquo;}
  before_save :capitalize_title
  has_attached_file :pic, :styles =></p>

<pre><code>    { :medium =&gt; "300*300&gt;", :thumb =&gt; "100*100&gt;" }
</code></pre>

<p>end
```</p>

<p>*. Views
Modify form file for new/edit view to enable the file upload
```</p>

<h1>app/view/movies/_form.html.erb</h1>

<p>&lt;%= form_for(@movie, :html => { :multipart => true })  do |f| %>
  &hellip;
  <p></p>

<pre><code>&lt;%= f.label :pic %&gt;&lt;br/&gt;
&lt;%= f.file_field :pic %&gt;
</code></pre>

<p>  </p>
  &hellip;
&lt;% end %>
```</p>

<p>*. Controller
Permit the parameters
```</p>

<h1>app/controler/movie_controller.rb</h1>

<p> # POST /movies.json
  def create</p>

<pre><code>@movie = Movie.new(movie_params)

respond_to do |format|
  if @movie.save
    format.html { redirect_to @movie, notice: 'Movie ' + @movie.title + ' was successfully created.' }
    format.json { render action: 'show', status: :created, location: @movie }
  else
    format.html { render action: 'new' }
    format.json { render json: @movie.errors, status: :unprocessable_entity }
  end
end
</code></pre>

<p>  end</p>

<p>   def movie_params</p>

<h1>params.require(:movie).permit(:title, :rating, :description, :release_date)</h1>

<pre><code> params.require(:movie).permit! 
</code></pre>

<p>   end
```</p>

<p>*. Show the uploaded picture
```</p>

<h1>show.haml.html</h1>

<p>%h4 Profile Pic:
  =image_tag @movie.pic.url(:medium)
```</p>

<p>sources:
<a href="https://devcenter.heroku.com/articles/paperclip-s3">https://devcenter.heroku.com/articles/paperclip-s3</a><br>
<a href="http://www.blitztheory.com/category/tutorials/">http://www.blitztheory.com/category/tutorials/</a><br></p>
]]></content>
  </entry>
  
</feed>
